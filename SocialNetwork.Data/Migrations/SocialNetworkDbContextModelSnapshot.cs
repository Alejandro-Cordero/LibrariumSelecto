// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetwork.Data;

#nullable disable

namespace SocialNetwork.Data.Migrations
{
    [DbContext(typeof(SocialNetworkDbContext))]
    partial class SocialNetworkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SocialNetwork.Core.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TypeTopicId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeTopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Articles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Este es el contenido del primer artículo del Usuario 1",
                            CreationDate = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5611),
                            Title = "Titulo del primer artículo del Usuario 1",
                            TypeTopicId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Este es el contenido del primer artículo del Usuario 2",
                            CreationDate = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5649),
                            Title = "Titulo del primer artículo del Usuario 2",
                            TypeTopicId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "Este es el contenido del primer artículo del Usuario 3",
                            CreationDate = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5651),
                            Title = "Titulo del primer artículo del Usuario 3",
                            TypeTopicId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Content = "Este es el contenido del primer artículo del Usuario 6",
                            CreationDate = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5652),
                            Title = "Titulo del primer artículo del Usuario 6",
                            TypeTopicId = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 5,
                            Content = "Este es el contenido del segundo artículo del Usuario 6",
                            CreationDate = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5654),
                            Title = "Titulo del segundo artículo del Usuario 6",
                            TypeTopicId = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            Content = "Este es el contenido del primer artículo del Usuario 8",
                            CreationDate = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5655),
                            Title = "Titulo del primer artículo del Usuario 8",
                            TypeTopicId = 3,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.Commentary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("UserId");

                    b.ToTable("Commentary", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5683),
                            Description = "Descripcion de comentario en articulo 1 de usuario 4",
                            Rating = 4,
                            Title = "Titulo de comentario en articulo 1 de usuario 4",
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 2,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5685),
                            Description = "Descripcion de comentario en articulo 2 de usuario 3",
                            Rating = 2,
                            Title = "Titulo de comentario en articulo 2 de usuario 3",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ArticleId = 2,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5687),
                            Description = "Descripcion de comentario en articulo 2 de usuario 6",
                            Rating = 5,
                            Title = "Titulo de comentario en articulo 2 de usuario 6",
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            ArticleId = 4,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5688),
                            Description = "Descripcion de comentario en articulo  4 de usuario 1",
                            Rating = 5,
                            Title = "Titulo de comentario en articulo 4 de usuario 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ArticleId = 6,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5690),
                            Description = "Descripcion de comentario en articulo 6 de usuario 10",
                            Rating = 2,
                            Title = "Titulo de comentario en articulo 6 de usuario 10",
                            UserId = 10
                        },
                        new
                        {
                            Id = 6,
                            ArticleId = 6,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5691),
                            Description = "Descripcion de comentario en articulo 6 de usuario 7",
                            Rating = 1,
                            Title = "Titulo de comentario en articulo 6 de usuario 7",
                            UserId = 7
                        });
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.Recommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("UserId");

                    b.ToTable("Recommendations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 2,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5718),
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 4,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5720),
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            ArticleId = 2,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5721),
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            ArticleId = 6,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5723),
                            UserId = 8
                        },
                        new
                        {
                            Id = 5,
                            ArticleId = 1,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5724),
                            UserId = 9
                        },
                        new
                        {
                            Id = 6,
                            ArticleId = 2,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5725),
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            ArticleId = 4,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5727),
                            UserId = 10
                        },
                        new
                        {
                            Id = 8,
                            ArticleId = 4,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5728),
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            ArticleId = 2,
                            Date = new DateTime(2024, 5, 8, 15, 56, 32, 878, DateTimeKind.Local).AddTicks(5729),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.TypeGender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TypeGender", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Female"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.TypeTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TypeTopic", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Office"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "eLearning"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Innovation"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Others"
                        });
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("TypeGenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("TypeGenderId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario1@gmail.com",
                            FirstName = "Usuario",
                            LastName = "1",
                            Login = "Usuario1",
                            Password = "Usuario1_pass",
                            Phone = "123456789",
                            TypeGenderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(2002, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario2@gmail.com",
                            FirstName = "Usuario",
                            LastName = "2",
                            Login = "Usuario2",
                            Password = "Usuario2_pass",
                            Phone = "223456789",
                            TypeGenderId = 2
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1996, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario3@gmail.com",
                            FirstName = "Usuario",
                            LastName = "3",
                            Login = "Usuario3",
                            Password = "Usuario3_pass",
                            Phone = "323456789",
                            TypeGenderId = 1
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(1995, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario4@gmail.com",
                            FirstName = "Usuario",
                            LastName = "4",
                            Login = "Usuario4",
                            Password = "Usuario4_pass",
                            Phone = "423456789",
                            TypeGenderId = 2
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(1988, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario5@gmail.com",
                            FirstName = "Usuario",
                            LastName = "5",
                            Login = "Usuario5",
                            Password = "Usuario5_pass",
                            Phone = "523456789",
                            TypeGenderId = 3
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(2005, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario6@gmail.com",
                            FirstName = "Usuario",
                            LastName = "6",
                            Login = "Usuario6",
                            Password = "Usuario6_pass",
                            Phone = "623456789",
                            TypeGenderId = 2
                        },
                        new
                        {
                            Id = 7,
                            Birthdate = new DateTime(2001, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario7@gmail.com",
                            FirstName = "Usuario",
                            LastName = "7",
                            Login = "Usuario7",
                            Password = "Usuario7_pass",
                            Phone = "723456789",
                            TypeGenderId = 2
                        },
                        new
                        {
                            Id = 8,
                            Birthdate = new DateTime(2000, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario8@gmail.com",
                            FirstName = "Usuario",
                            LastName = "8",
                            Login = "Usuario8",
                            Password = "Usuario8_pass",
                            Phone = "823456789",
                            TypeGenderId = 1
                        },
                        new
                        {
                            Id = 9,
                            Birthdate = new DateTime(1999, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario9@gmail.com",
                            FirstName = "Usuario",
                            LastName = "9",
                            Login = "Usuario9",
                            Password = "Usuario9_pass",
                            Phone = "923456789",
                            TypeGenderId = 3
                        },
                        new
                        {
                            Id = 10,
                            Birthdate = new DateTime(1991, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Usuario10@gmail.com",
                            FirstName = "Usuario",
                            LastName = "10",
                            Login = "Usuario10",
                            Password = "Usuario10_pass",
                            Phone = "023456789",
                            TypeGenderId = 1
                        });
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.Article", b =>
                {
                    b.HasOne("SocialNetwork.Core.Models.TypeTopic", "TypeTopic")
                        .WithMany("Articles")
                        .HasForeignKey("TypeTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialNetwork.Core.Models.User", "User")
                        .WithMany("Articles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeTopic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.Commentary", b =>
                {
                    b.HasOne("SocialNetwork.Core.Models.Article", "Article")
                        .WithMany("Commentaries")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SocialNetwork.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.Recommendation", b =>
                {
                    b.HasOne("SocialNetwork.Core.Models.Article", "Article")
                        .WithMany("Recommendations")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SocialNetwork.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.User", b =>
                {
                    b.HasOne("SocialNetwork.Core.Models.TypeGender", "TypeGender")
                        .WithMany("Users")
                        .HasForeignKey("TypeGenderId");

                    b.Navigation("TypeGender");
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.Article", b =>
                {
                    b.Navigation("Commentaries");

                    b.Navigation("Recommendations");
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.TypeGender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.TypeTopic", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("SocialNetwork.Core.Models.User", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
