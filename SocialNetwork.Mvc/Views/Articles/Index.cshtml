@model SocialNetwork.Data.Models.ViewModels.IndexViewModel

@{
    ViewData["Title"] = "Lista de Artículos";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string currentAction = ViewContext.RouteData.Values["action"]?.ToString();
    string actionName = string.IsNullOrEmpty(currentAction) ? "" : currentAction;
}

<div class="container mx-auto my-5">
    <div class="flex justify-between items-center mb-4">
        <a asp-action="GetArticleDetails" asp-controller="Articles" class="btn bg-black text-white hover:bg-gray-800 px-4 py-2 rounded-md">Añadir artículo</a>
        <button class="btn border border-black text-black hover:bg-black hover:text-white px-4 py-2 rounded-md" id="toggleFilter">
            <i class="fa-solid fa-filter"></i>
        </button>
    </div>
    <div id="filterForm" class="mb-5 hidden">
        <div class="card p-6 mx-auto max-w-xl bg-white shadow-lg rounded-lg">
            <form asp-action="Index" asp-controller="Articles" method="post">
                <div class="mb-4">
                    <label for="author" class="block text-sm font-medium text-gray-700">Autor</label>
                    <input type="text" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black" id="author" name="author" />
                </div>
                <div class="mb-4">
                    <label for="content" class="block text-sm font-medium text-gray-700">Contenido</label>
                    <input type="text" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black" id="content" name="content" />
                </div>
                <div class="mb-4">
                    <label for="firstDate" class="block text-sm font-medium text-gray-700">Fecha de inicio</label>
                    <input type="date" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black" id="firstDate" name="firstDate" />
                </div>
                <div class="mb-4">
                    <label for="lastDate" class="block text-sm font-medium text-gray-700">Fecha final</label>
                    <input type="date" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black" id="lastDate" name="lastDate" />
                </div>
                <div class="text-center">
                    <button type="submit" class="btn bg-black text-white hover:bg-gray-800 px-4 py-2 rounded-md">Buscar</button>
                </div>
            </form>
        </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-5">
        @foreach (var item in Model.Articles)
        {
            <div class="card bg-white shadow-lg rounded-lg p-6 fade-in-up">
                <div class="flex justify-between items-center mb-2">
                    <div>
                        @foreach (var user in Model.Users)
                        {
                            if (item.UserId == user.Id)
                            {
                                <a asp-action="Index" asp-controller="Articles" asp-route-id="@item.UserId" class="text-black hover:underline">@Html.DisplayFor(modelItem => user.Login)</a>
                            }
                        }
                    </div>
                    <small class="text-gray-500">@Html.DisplayFor(modelItem => item.CreationDate)</small>
                </div>
                <h5 class="text-lg font-bold text-black">@Html.DisplayFor(modelItem => item.Title)</h5>
                <p class="text-gray-700">@Html.DisplayFor(modelItem => item.Content)</p>
                <div class="flex justify-between items-center mt-4">
                    <div>
                        <button class="btn border border-black text-black hover:bg-black hover:text-white px-3 py-1 rounded-md" data-bs-toggle="modal" data-bs-target="#modalRecomendaciones@(item.Id)">
                            <i class="fas fa-thumbs-up"></i>
                            <span class="ml-2">
                                @{
                                    int contadorRecomendaciones = Model.Recommendations.Count(like => like.ArticleId == item.Id);
                                    @contadorRecomendaciones
                                }
                            </span>
                        </button>
                        <button class="btn border border-black text-black hover:bg-black hover:text-white px-3 py-1 rounded-md ml-2" data-bs-toggle="modal" data-bs-target="#modalComentarios@(item.Id)">
                            <i class="fas fa-comments"></i>
                            <span class="ml-2">
                                @{
                                    int contadorComentarios = Model.Commentaries.Count(comment => comment.ArticleId == item.Id);
                                    @contadorComentarios
                                }
                            </span>
                        </button>
                    </div>
                    <a asp-action="GetArticleDetails" asp-controller="Articles" asp-route-id="@item.Id" class="text-black hover:underline">Ver más</a>
                </div>
            </div>

            <!-- Modal Recomendaciones -->
            <div class="modal fade" id="modalRecomendaciones@(item.Id)" tabindex="-1" aria-labelledby="modalRecomendacionesLabel@(item.Id)" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title text-black" id="modalRecomendacionesLabel@(item.Id)">Recomendaciones del artículo:</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body text-gray-700">
                            @foreach (var like in Model.Recommendations.Where(like => like.ArticleId == item.Id))
                            {
                                <p>@like.User.Login ha recomendado este artículo <i class="fas fa-thumbs-up"></i></p>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal Comentarios -->
            <div class="modal fade" id="modalComentarios@(item.Id)" tabindex="-1" aria-labelledby="modalComentariosLabel@(item.Id)" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title text-black" id="modalComentariosLabel@(item.Id)">Usuarios que comentaron el artículo:</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body text-gray-700">
                            @foreach (var group in Model.Commentaries.Where(c => c.ArticleId == item.Id).GroupBy(c => c.UserId))
                            {
                                var user = Model.Users.FirstOrDefault(u => u.Id == group.Key);
                                if (user != null)
                                {
                                    if (group.Count() == 1)
                                    {
                                        <p>@user.Login ha comentado en este artículo</p>
                                    }
                                    else
                                    {
                                        <p>@user.Login ha comentado @group.Count() veces en este artículo</p>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Paginación -->
    <div class="flex justify-center mt-5">
        <nav aria-label="Page navigation">
            <ul class="pagination flex space-x-1">
                <li class="page-item @(Model.PageIndex > 1 ? "" : "disabled")">
                    <a class="page-link hover:bg-gray-200 px-3 py-1 rounded-md" asp-controller="Articles" asp-action="@(actionName)" asp-route-page="1">Primera</a>
                </li>
                <li class="page-item @(Model.PageIndex > 1 ? "" : "disabled")">
                    <a class="page-link hover:bg-gray-200 px-3 py-1 rounded-md" asp-controller="Articles" asp-action="@actionName" asp-route-page="@(Model.PageIndex - 1)">&lt;</a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link hover:bg-gray-200 px-3 py-1 rounded-md @(i == Model.PageIndex ? "bg-black text-white" : "text-black")" asp-controller="Articles" asp-action="@actionName" asp-route-page="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.PageIndex < Model.TotalPages ? "" : "disabled")">
                    <a class="page-link hover:bg-gray-200 px-3 py-1 rounded-md" asp-controller="Articles" asp-action="@actionName" asp-route-page="@(Model.PageIndex + 1)">&gt;</a>
                </li>
                <li class="page-item @(Model.PageIndex < Model.TotalPages ? "" : "disabled")">
                    <a class="page-link hover:bg-gray-200 px-3 py-1 rounded-md" asp-controller="Articles" asp-action="@(actionName)" asp-route-page="@(Model.TotalPages)">Última</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#toggleFilter").click(function () {
            $("#filterForm").slideToggle({
                duration: 600,
                easing: 'swing'
            });
        });
    });
</script>

<style>
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .fade-in-up {
        animation: fadeInUp 0.5s ease-out forwards;
    }

    .btn:hover {
        background-color: black !important;
        color: #fff !important;
    }

    .card {
        padding: 1.5rem; /* Aumentar el espaciado interno */
    }

    .btn-close {
        background: none;
        border: none;
    }

    .btn-close:hover {
        color: #000;
    }
</style>
